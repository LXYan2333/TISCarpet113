--- a/net/minecraft/entity/item/EntityFallingBlock.java
+++ b/net/minecraft/entity/item/EntityFallingBlock.java
@@ -1,5 +1,7 @@
 package net.minecraft.entity.item;
 
+import carpet.logging.LoggerRegistry;
+import carpet.logging.logHelpers.TrajectoryLogHelper;
 import com.google.common.collect.Lists;
 import java.util.List;
 import net.minecraft.block.Block;
@@ -44,6 +46,20 @@
     public NBTTagCompound tileEntityData;
     protected static final DataParameter<BlockPos> ORIGIN = EntityDataManager.createKey(EntityFallingBlock.class, DataSerializers.BLOCK_POS);
 
+    // ----- Carpet Start ----- //
+    private TrajectoryLogHelper logHelper = null;
+
+    /**
+     * Will get destroyed next tick.
+     */
+    @Override
+    public void remove() {
+        if (LoggerRegistry.__fallingBlocks && logHelper != null)
+            logHelper.onFinish();
+        super.remove();
+    }
+    // ----- Carpet End ----- //
+
     public EntityFallingBlock(World worldIn)
     {
         super(EntityType.FALLING_BLOCK, worldIn);
@@ -63,6 +79,9 @@
         this.prevPosY = y;
         this.prevPosZ = z;
         this.setOrigin(new BlockPos(this));
+        //CM
+        if (LoggerRegistry.__fallingBlocks)
+            logHelper = new TrajectoryLogHelper("fallingBlocks");
     }
 
     public boolean canBeAttackedWithItem()
@@ -98,6 +117,11 @@
 
     public void tick()
     {
+        // ----- Carpet Start ----- //
+        if (LoggerRegistry.__fallingBlocks && logHelper != null)
+            logHelper.onTick(posX, posY, posZ, motionX, motionY, motionZ, this.world.getGameTime());
+        // ----- Carpet End ----- //
+
         if (this.fallTile.isAir())
         {
             this.remove();
@@ -113,7 +137,7 @@
             {
                 BlockPos blockpos = new BlockPos(this);
 
-                if (this.world.getBlockState(blockpos).getBlock() == block)
+                if (this.getBlockState(blockpos).getBlock() == block)
                 {
                     this.world.removeBlock(blockpos);
                 }
@@ -163,9 +187,9 @@
                 }
                 else
                 {
-                    IBlockState iblockstate = this.world.getBlockState(blockpos1);
+                    IBlockState iblockstate = this.getBlockState(blockpos1);
 
-                    if (!flag1 && BlockFalling.canFallThrough(this.world.getBlockState(new BlockPos(this.posX, this.posY - (double)0.01F, this.posZ))))
+                    if (!flag1 && BlockFalling.canFallThrough(this.getBlockState(MathHelper.floor(this.posX), MathHelper.floor(this.posY - (double)0.01F), MathHelper.floor(this.posZ))))
                     {
                         this.onGround = false;
                         return;
@@ -181,7 +205,7 @@
 
                         if (!this.dontSetBlock)
                         {
-                            if (iblockstate.getMaterial().isReplaceable() && (flag1 || !BlockFalling.canFallThrough(this.world.getBlockState(blockpos1.down()))) && this.world.setBlockState(blockpos1, this.fallTile, 3))
+                            if (iblockstate.getMaterial().isReplaceable() && (flag1 || !BlockFalling.canFallThrough(this.getBlockState(blockpos1.getX(), blockpos1.getY() -1, blockpos1.getZ()))) && this.world.setBlockState(blockpos1, this.fallTile, 3))
                             {
                                 if (block instanceof BlockFalling)
                                 {
