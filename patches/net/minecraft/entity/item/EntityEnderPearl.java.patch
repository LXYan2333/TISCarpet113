--- a/net/minecraft/entity/item/EntityEnderPearl.java
+++ b/net/minecraft/entity/item/EntityEnderPearl.java
@@ -1,6 +1,9 @@
 package net.minecraft.entity.item;
 
 import javax.annotation.Nullable;
+
+import carpet.logging.LoggerRegistry;
+import carpet.patches.EntityPlayerMPFake;
 import net.minecraft.advancements.CriteriaTriggers;
 import net.minecraft.entity.Entity;
 import net.minecraft.entity.EntityLivingBase;
@@ -68,7 +71,7 @@
                 {
                     if (entitylivingbase instanceof EntityPlayerMP)
                     {
-                        CriteriaTriggers.ENTER_BLOCK.trigger((EntityPlayerMP)entitylivingbase, this.world.getBlockState(blockpos));
+                        CriteriaTriggers.ENTER_BLOCK.trigger((EntityPlayerMP)entitylivingbase, this.getBlockState(blockpos));
                     }
 
                     tileentityendgateway.teleportEntity(entitylivingbase);
@@ -92,7 +95,8 @@
             {
                 EntityPlayerMP entityplayermp = (EntityPlayerMP)entitylivingbase;
 
-                if (entityplayermp.connection.getNetworkManager().isChannelOpen() && entityplayermp.world == this.world && !entityplayermp.isPlayerSleeping())
+                //CM added condition for fake players to throw enderpearl
+                if ((entityplayermp.connection.getNetworkManager().isChannelOpen() || entityplayermp instanceof EntityPlayerMPFake) && entityplayermp.world == this.world && !entityplayermp.isPlayerSleeping())
                 {
                     if (this.rand.nextFloat() < 0.05F && this.world.getGameRules().getBoolean("doMobSpawning"))
                     {
@@ -118,6 +122,18 @@
                 entitylivingbase.fallDistance = 0.0F;
             }
 
+            //TISCM add collide at logger
+            if (LoggerRegistry.__projectiles && this.logHelper != null)
+            {
+                if (result.type == RayTraceResult.Type.BLOCK) {
+                    this.logHelper.onCollide(result.hitVec.x, result.hitVec.y, result.hitVec.z, "Block", this.world);
+            }
+                else {
+                    this.logHelper.onCollide(result.hitVec.x, result.hitVec.y, result.hitVec.z, "Entity", this.world);
+                }
+            }
+            //END TISCM
+
             this.remove();
         }
     }
