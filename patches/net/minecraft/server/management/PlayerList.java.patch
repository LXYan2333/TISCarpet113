--- a/net/minecraft/server/management/PlayerList.java
+++ b/net/minecraft/server/management/PlayerList.java
@@ -1,17 +1,19 @@
 package net.minecraft.server.management;
 
+import carpet.CarpetServer;
+import carpet.network.CarpetServerNetworkHandler;
+import carpet.patches.EntityPlayerMPFake;
+import carpet.patches.NetHandlerPlayServerFake;
 import com.google.common.collect.Lists;
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
 import com.mojang.authlib.GameProfile;
+import com.mojang.datafixers.util.Pair;
 import io.netty.buffer.Unpooled;
 import java.io.File;
 import java.net.SocketAddress;
 import java.text.SimpleDateFormat;
-import java.util.List;
-import java.util.Map;
-import java.util.Set;
-import java.util.UUID;
+import java.util.*;
 import javax.annotation.Nullable;
 import net.minecraft.advancements.CriteriaTriggers;
 import net.minecraft.advancements.PlayerAdvancements;
@@ -49,6 +51,7 @@
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.stats.StatList;
 import net.minecraft.stats.StatisticsManagerServer;
+import net.minecraft.util.ResourceLocation;
 import net.minecraft.util.math.BlockPos;
 import net.minecraft.util.math.MathHelper;
 import net.minecraft.util.text.ChatType;
@@ -123,7 +126,9 @@
         WorldServer worldserver = this.server.getWorld(playerIn.dimension);
         WorldInfo worldinfo = worldserver.getWorldInfo();
         this.setPlayerGameTypeBasedOnOther(playerIn, (EntityPlayerMP)null, worldserver);
-        NetHandlerPlayServer nethandlerplayserver = new NetHandlerPlayServer(this.server, netManager, playerIn);
+        //custom manager for fake players [CM]
+        //NetHandlerPlayServer nethandlerplayserver = new NetHandlerPlayServer(this.server, netManager, playerIn);
+        NetHandlerPlayServer nethandlerplayserver = (playerIn instanceof EntityPlayerMPFake)?(new NetHandlerPlayServerFake(this.server, netManager, playerIn)):(new NetHandlerPlayServer(this.server, netManager, playerIn));
         nethandlerplayserver.sendPacket(new SPacketJoinGame(playerIn.getEntityId(), playerIn.interactionManager.getGameType(), worldinfo.isHardcore(), worldserver.dimension.getType(), worldserver.getDifficulty(), this.getMaxPlayers(), worldinfo.getGenerator(), worldserver.getGameRules().getBoolean("reducedDebugInfo")));
         nethandlerplayserver.sendPacket(new SPacketCustomPayload(SPacketCustomPayload.BRAND, (new PacketBuffer(Unpooled.buffer())).writeString(this.getServer().getServerModName())));
         nethandlerplayserver.sendPacket(new SPacketServerDifficulty(worldinfo.getDifficulty(), worldinfo.isDifficultyLocked()));
@@ -201,6 +206,9 @@
         }
 
         playerIn.addSelfToInternalCraftingInventory();
+
+        //CM: onPlayerConnect
+        CarpetServerNetworkHandler.onPlayerJoin(playerIn);
     }
 
     protected void sendScoreboard(ServerScoreboard scoreboardIn, EntityPlayerMP playerIn)
@@ -306,6 +314,10 @@
         {
             nbttagcompound1 = this.playerDataManager.readPlayerData(playerIn);
         }
+        if (playerIn instanceof EntityPlayerMPFake)
+        {
+            ((EntityPlayerMPFake) playerIn).fixStartingPosition.run();
+        }
 
         return nbttagcompound1;
     }
@@ -454,6 +466,12 @@
 
         for (EntityPlayerMP entityplayermp1 : list)
         {
+            //CM disconnect shadowed players
+            if(entityplayermp1 instanceof EntityPlayerMPFake)
+            {
+                entityplayermp1.onKillCommand();
+                continue;
+            }
             entityplayermp1.connection.disconnect(new TextComponentTranslation("multiplayer.disconnect.duplicate_login"));
         }
 
@@ -721,6 +739,45 @@
         }
     }
 
+    // TISCM break_bedrock stat
+    public void addStatsToNearestPlayersInDimensionNear(DimensionType dimension, BlockPos pos, double radius, ResourceLocation stat, int amount)
+    {
+        Comparator<Pair<Double, EntityPlayerMP>> comparator = (a, b) ->
+        {
+            if (a.getFirst() < b.getFirst())
+            {
+                return -1;
+            }
+            else if (a.getFirst() > b.getFirst())
+            {
+                return 1;
+            }
+            return 0;
+        };
+
+        List<Pair<Double, EntityPlayerMP>> list = Lists.newArrayList();
+
+        for (int i = 0; i < this.players.size(); ++i)
+        {
+            EntityPlayerMP player = this.players.get(i);
+
+            if (player.dimension == dimension && !player.isSpectator())
+            {
+                double dis = player.getDistanceSq((double)pos.getX() + 0.5D, (double)pos.getY() + 0.5D, (double)pos.getZ() + 0.5D);
+                if (dis < radius * radius)
+                {
+                    list.add(new Pair<>(dis, player));
+                }
+            }
+        }
+        if (list.size() > 0)
+        {
+            list.sort(comparator);
+            EntityPlayerMP player = list.get(0).getSecond();
+            player.addStat(stat, amount);
+        }
+    }
+
     public String[] getOnlinePlayerNames()
     {
         String[] astring = new String[this.players.size()];
