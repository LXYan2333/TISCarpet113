--- a/net/minecraft/world/chunk/storage/AnvilChunkLoader.java
+++ b/net/minecraft/world/chunk/storage/AnvilChunkLoader.java
@@ -1,15 +1,15 @@
 package net.minecraft.world.chunk.storage;
 
+import carpet.settings.CarpetSettings;
+import carpet.utils.LightingHooks;
 import com.google.common.collect.Maps;
 import com.mojang.datafixers.DataFixTypes;
 import com.mojang.datafixers.DataFixer;
 import it.unimi.dsi.fastutil.longs.LongOpenHashSet;
 import it.unimi.dsi.fastutil.longs.LongSet;
 import it.unimi.dsi.fastutil.shorts.ShortList;
-import java.io.DataInputStream;
-import java.io.DataOutputStream;
-import java.io.File;
-import java.io.IOException;
+
+import java.io.*;
 import java.util.BitSet;
 import java.util.Iterator;
 import java.util.Map;
@@ -17,6 +17,10 @@
 import java.util.function.Consumer;
 import java.util.function.Function;
 import javax.annotation.Nullable;
+
+import me.jellysquid.mods.lithium.common.nbt.io.NbtFastIo;
+import me.jellysquid.mods.lithium.common.nbt.io.bytes.NbtByteArrayReader;
+import me.jellysquid.mods.lithium.config.LiConfig;
 import net.minecraft.block.Block;
 import net.minecraft.crash.ReportedException;
 import net.minecraft.entity.Entity;
@@ -59,6 +63,7 @@
 import net.minecraft.world.storage.SessionLockException;
 import net.minecraft.world.storage.ThreadedFileIOBase;
 import net.minecraft.world.storage.WorldSavedDataStorage;
+import org.apache.commons.io.IOUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
@@ -70,7 +75,10 @@
     private final DataFixer fixer;
     private LegacyStructureDataUtil field_208031_e;
     private boolean flushing;
+    /** Lithium IO */
+    private static final int INITIAL_SIZE = 1024 * 32;
 
+
     public AnvilChunkLoader(File chunkSaveLocationIn, DataFixer fixerIn)
     {
         this.chunkSaveLocation = chunkSaveLocationIn;
@@ -78,13 +86,13 @@
     }
 
     @Nullable
-    private NBTTagCompound func_208030_a(IWorld worldIn, int chunkX, int chunkZ) throws IOException
+    private NBTTagCompound getTagAt(IWorld worldIn, int chunkX, int chunkZ) throws IOException
     {
-        return this.func_212146_a(worldIn.getDimension().getType(), worldIn.getSavedDataStorage(), chunkX, chunkZ);
+        return this.getTagAt(worldIn.getDimension().getType(), worldIn.getSavedDataStorage(), chunkX, chunkZ);
     }
 
     @Nullable
-    private NBTTagCompound func_212146_a(DimensionType p_212146_1_, @Nullable WorldSavedDataStorage storage, int chunkX, int chunkZ) throws IOException
+    private NBTTagCompound getTagAt(DimensionType dimensionType, @Nullable WorldSavedDataStorage storage, int chunkX, int chunkZ) throws IOException
     {
         NBTTagCompound nbttagcompound = this.chunksToSave.get(new ChunkPos(chunkX, chunkZ));
 
@@ -102,8 +110,24 @@
             }
             else
             {
-                NBTTagCompound nbttagcompound1 = CompressedStreamTools.read(datainputstream);
-                datainputstream.close();
+                NBTTagCompound nbttagcompound1;
+                if (LiConfig.NBT.fastNBTSerialization)
+                {
+                    byte[] buf;
+                    try (ByteArrayOutputStream out = new ByteArrayOutputStream(INITIAL_SIZE)) {
+                        IOUtils.copy(datainputstream, out);
+                        buf = out.toByteArray();
+                    } finally {
+                        datainputstream.close();
+                    }
+                    NbtByteArrayReader in = new NbtByteArrayReader(buf);
+                    nbttagcompound1 = NbtFastIo.read(in);
+                }
+                else
+                {
+                    nbttagcompound1 = CompressedStreamTools.read(datainputstream);
+                    datainputstream.close();
+                }
                 int i = nbttagcompound1.contains("DataVersion", 99) ? nbttagcompound1.getInt("DataVersion") : -1;
 
                 if (i < 1493)
@@ -112,7 +136,7 @@
 
                     if (nbttagcompound1.getCompound("Level").getBoolean("hasLegacyStructureData"))
                     {
-                        this.func_212429_a(p_212146_1_, storage);
+                        this.func_212429_a(dimensionType, storage);
                         nbttagcompound1 = this.field_208031_e.func_212181_a(nbttagcompound1);
                     }
                 }
@@ -141,7 +165,7 @@
     @Nullable
     public Chunk loadChunk(IWorld worldIn, int x, int z, Consumer<Chunk> consumer) throws IOException
     {
-        NBTTagCompound nbttagcompound = this.func_208030_a(worldIn, x, z);
+        NBTTagCompound nbttagcompound = this.getTagAt(worldIn, x, z);
 
         if (nbttagcompound == null)
         {
@@ -168,7 +192,7 @@
 
         try
         {
-            nbttagcompound = this.func_208030_a(worldIn, x, z);
+            nbttagcompound = this.getTagAt(worldIn, x, z);
         }
         catch (ReportedException reportedexception)
         {
@@ -282,7 +306,7 @@
             }
             else
             {
-                NBTTagCompound nbttagcompound2 = this.func_208030_a(worldIn, chunkpos.x, chunkpos.z);
+                NBTTagCompound nbttagcompound2 = this.getTagAt(worldIn, chunkpos.x, chunkpos.z);
 
                 if (nbttagcompound2 != null && this.readChunkTypeFromNBT(nbttagcompound2) == ChunkStatus.Type.LEVELCHUNK)
                 {
@@ -483,6 +507,9 @@
         ChunkSection[] achunksection = chunkIn.getSections();
         NBTTagList nbttaglist = this.writeChunkSectionsToNBT(worldIn, achunksection);
         compound.put("Sections", nbttaglist);
+        // [TISCM] Newlight
+        if (CarpetSettings.newLight)
+            LightingHooks.writeLightData(chunkIn, compound);
         Biome[] abiome = chunkIn.getBiomes();
         int[] aint = new int[abiome.length];
 
@@ -616,6 +643,9 @@
         chunk.setStatus(compound.getString("Status"));
         NBTTagList nbttaglist = compound.getList("Sections", 10);
         chunk.setSections(this.readSectionsFromNBT(worldIn, nbttaglist));
+        // [TISCM] Newlight
+        if (CarpetSettings.newLight)
+            LightingHooks.readLightData(chunk, compound);
         NBTTagCompound nbttagcompound = compound.getCompound("Heightmaps");
 
         for (Heightmap.Type heightmap$type : Heightmap.Type.values())
@@ -1022,7 +1052,7 @@
 
         try
         {
-            this.func_212146_a(p_212147_2_, p_212147_3_, p_212147_1_.x, p_212147_1_.z);
+            this.getTagAt(p_212147_2_, p_212147_3_, p_212147_1_.x, p_212147_1_.z);
 
             while (this.writeNextIO())
             {
